model:
  arch: video_llama
  model_type: pretrain_vicuna
  freeze_vit: True
  freeze_qformer: True

  # Q-Former
  num_query_token: 32

  # If you want train models based on LLaMA-2-chat,
  # some ckpts could be download from our provided huggingface repo
  # i.e.  https://huggingface.co/DAMO-NLP-SG/Video-LLaMA-2-13B-Pretrained
  llama_model: "/mnt/disks/chfuab/Llama-2-7b-hf" #"ckpt/llama-2-7b-chat-hf"
  imagebind_ckpt_path: "/mnt/disks/chfuab"
  llama_proj_model: "/mnt/disks/chfuab/pretrained_minigpt4_7b.pth"

  # only train vision branch
  equip_audio_branch: True # whether equips the audio branch
  frozen_llama_proj: True
  frozen_video_Qformer: True
  frozen_audio_Qformer: False
  frozen_linear_proj: False # True when using QFormerAligned

  fusion_head_layers: 2
  max_frame_pos: 32
  fusion_header_type: "seqTransf"
  num_video_query_token: 32

  equip_QFormerAligned: False
  qa_ckpt_path: ""
  llama_type: "causalLM"

  use_lora: True

datasets:
  # webvid:
  #   data_type: video
  #   build_info:
  #     anno_dir: /mnt/disks/chfuab/video-llama/data/webvid/data/train/annotations
  #     videos_dir: /mnt/disks/chfuab/video-llama/data/webvid/data/train/videos
  #     anno_dir_val: /mnt/disks/chfuab/video-llama/data/webvid/data/eval/annotations
  #     videos_dir_val: /mnt/disks/chfuab/video-llama/data/webvid/data/eval/videos
  vast27M:
    data_type: video
    build_info:
      anno_dir: /mnt/disks/chfuab/video-llama/data/vast27m/train/annotations
      videos_dir: /mnt/disks/chfuab/video-llama/data/vast27m/train/videos
      anno_dir_val: /mnt/disks/chfuab/video-llama/data/vast27m/eval/annotations
      videos_dir_val: /mnt/disks/chfuab/video-llama/data/vast27m/eval/videos

    vis_processor:
      train:
        name: "alpro_video_train"
        n_frms: 8
        image_size: 224
      eval:
        # name: "alpro_video_eval"
        name: "alpro_video_train"
        n_frms: 8
        image_size: 224
    audio_processor:
      train:
        name: "audio_processor"
      eval:
        name: "audio_processor"
    text_processor:
      train:
        name: "blip_caption"
      eval:
        name: "blip_caption"
    sample_ratio: 100

run:
  task: video_text_pretrain
  # optimizer
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 1e-4
  min_lr: 8e-5
  warmup_lr: 1e-6

  weight_decay: 0.05
  max_epoch: 5
  batch_size_train: 1
  batch_size_eval: 1
  # batch_size_train: 32
  # batch_size_eval: 32
  # num_workers: 8
  num_workers: 1
  # warmup_steps: 2500
  # iters_per_epoch: 2500
  warmup_steps: 1
  # iters_per_epoch: 1
  iters_per_epoch: 2

  seed: 42
  output_dir: "/mnt/disks/chfuab/output_dir"

  amp: True
  resume_ckpt_path: null

  evaluate: False
  train_splits: ["train"]
  valid_splits: ["eval"]
  test_splits: ["test"]

  device: "cuda"
  world_size: 1
  dist_url: "env://"
  # distributed: True
  distributed: False

  evaluate_metrics: ["CIDEr", "METEOR", "ROUGE_L", "SPICE", "Bleu"]
  agg_metrics: "CIDEr"
